rho <- 0.19
sigma <- matrix(c(1, rho, rho, 1), nrow = 2)
set.seed(564)
data <- mvrnorm(n = n, mu = mu, Sigma = sigma)
#n <- 1000
#data = matrix(0.0, nrow=n, ncol=2)
#data[,1] = rnorm(n)
#data[,2] = data[,1] + 4*rnorm(n)
#colnames(data) <- c("self","obj")
#cor(data[,1],data[,2])
colnames(data) <- c("self","obj")
# Quartiles based on first column (self)
q_self <- quantile(data[,1], probs = c(0.25, 0.5, 0.75))
groups_self <- cut(data[,1], breaks = c(-Inf, q_self[1], q_self[2], q_self[3], Inf), labels = FALSE)
split_self <- split(as.data.frame(data), groups_self)
df_self <- data.frame(
group = factor(names(split_self), levels = 1:4),
perc_self = 100 * sapply(split_self, function(x) ecdf(data[,"self"])(mean(x[,"self"]))),
perc_obj = 100 * sapply(split_self, function(x) ecdf(data[,"obj"])(mean(x[,"obj"])))
)
p_self <- ggplot(df_self, aes(x = group)) +
geom_line(aes(y = perc_obj, group = 1, color = "Objective")) +
geom_point(aes(y = perc_obj, color = "Objective")) +
geom_line(aes(y = perc_self, group = 1, color = "Self-report")) +
geom_point(aes(y = perc_self, color = "Self-report")) +
labs(x = "Group (self-report)", y = "Percentile (%)", color = "") +
theme(legend.position = "bottom")
# Quartiles based on second column (obj)
q_obj <- quantile(data[,2], probs = c(0.25, 0.5, 0.75))
groups_obj <- cut(data[,2], breaks = c(-Inf, q_obj[1], q_obj[2], q_obj[3], Inf), labels = FALSE)
split_obj <- split(as.data.frame(data), groups_obj)
df_obj <- data.frame(
group = factor(names(split_obj), levels = 1:4),
perc_self = 100 * sapply(split_obj, function(x) ecdf(data[,"self"])(mean(x[,"self"]))),
perc_obj = 100 * sapply(split_obj, function(x) ecdf(data[,"obj"])(mean(x[,"obj"])))
)
p_obj <- ggplot(df_obj, aes(x = group)) +
geom_line(aes(y = perc_obj, group = 1, color = "Objective")) +
geom_point(aes(y = perc_obj, color = "Objective")) +
geom_line(aes(y = perc_self, group = 1, color = "Self-report")) +
geom_point(aes(y = perc_self, color = "Self-report")) +
labs(x = "Group (objective)", y = "Percentile (%)", color = "") +
theme(legend.position = "bottom")
grid.arrange(p_self, p_obj, ncol = 2)
library(MASS)
library(ggplot2)
library(gridExtra)
n <- 1000
mu <- c(0, 0)
rho <- 0.19
sigma <- matrix(c(1, rho, rho, 1), nrow = 2)
set.seed(565)
data <- mvrnorm(n = n, mu = mu, Sigma = sigma)
#n <- 1000
#data = matrix(0.0, nrow=n, ncol=2)
#data[,1] = rnorm(n)
#data[,2] = data[,1] + 4*rnorm(n)
#colnames(data) <- c("self","obj")
#cor(data[,1],data[,2])
colnames(data) <- c("self","obj")
# Quartiles based on first column (self)
q_self <- quantile(data[,1], probs = c(0.25, 0.5, 0.75))
groups_self <- cut(data[,1], breaks = c(-Inf, q_self[1], q_self[2], q_self[3], Inf), labels = FALSE)
split_self <- split(as.data.frame(data), groups_self)
df_self <- data.frame(
group = factor(names(split_self), levels = 1:4),
perc_self = 100 * sapply(split_self, function(x) ecdf(data[,"self"])(mean(x[,"self"]))),
perc_obj = 100 * sapply(split_self, function(x) ecdf(data[,"obj"])(mean(x[,"obj"])))
)
p_self <- ggplot(df_self, aes(x = group)) +
geom_line(aes(y = perc_obj, group = 1, color = "Objective")) +
geom_point(aes(y = perc_obj, color = "Objective")) +
geom_line(aes(y = perc_self, group = 1, color = "Self-report")) +
geom_point(aes(y = perc_self, color = "Self-report")) +
labs(x = "Group (self-report)", y = "Percentile (%)", color = "") +
theme(legend.position = "bottom")
# Quartiles based on second column (obj)
q_obj <- quantile(data[,2], probs = c(0.25, 0.5, 0.75))
groups_obj <- cut(data[,2], breaks = c(-Inf, q_obj[1], q_obj[2], q_obj[3], Inf), labels = FALSE)
split_obj <- split(as.data.frame(data), groups_obj)
df_obj <- data.frame(
group = factor(names(split_obj), levels = 1:4),
perc_self = 100 * sapply(split_obj, function(x) ecdf(data[,"self"])(mean(x[,"self"]))),
perc_obj = 100 * sapply(split_obj, function(x) ecdf(data[,"obj"])(mean(x[,"obj"])))
)
p_obj <- ggplot(df_obj, aes(x = group)) +
geom_line(aes(y = perc_obj, group = 1, color = "Objective")) +
geom_point(aes(y = perc_obj, color = "Objective")) +
geom_line(aes(y = perc_self, group = 1, color = "Self-report")) +
geom_point(aes(y = perc_self, color = "Self-report")) +
labs(x = "Group (objective)", y = "Percentile (%)", color = "") +
theme(legend.position = "bottom")
grid.arrange(p_self, p_obj, ncol = 2)
library(MASS)
library(ggplot2)
library(gridExtra)
n <- 1000
mu <- c(0, 0)
rho <- 0.19
sigma <- matrix(c(1, rho, rho, 1), nrow = 2)
set.seed(565)
data <- mvrnorm(n = n, mu = mu, Sigma = sigma)
#n <- 1000
#data = matrix(0.0, nrow=n, ncol=2)
#data[,1] = rnorm(n)
#data[,2] = data[,1] + 4*rnorm(n)
#colnames(data) <- c("self","obj")
#cor(data[,1],data[,2])
colnames(data) <- c("self","obj")
# Quartiles based on first column (self)
q_self <- quantile(data[,1], probs = c(0.25, 0.5, 0.75))
groups_self <- cut(data[,1], breaks = c(-Inf, q_self[1], q_self[2], q_self[3], Inf), labels = FALSE)
split_self <- split(as.data.frame(data), groups_self)
df_self <- data.frame(
group = factor(names(split_self), levels = 1:4),
perc_self = 100 * sapply(split_self, function(x) ecdf(data[,"self"])(mean(x[,"self"]))),
perc_obj = 100 * sapply(split_self, function(x) ecdf(data[,"obj"])(mean(x[,"obj"])))
)
p_self <- ggplot(df_self, aes(x = group)) +
geom_line(aes(y = perc_obj, group = 1, color = "Objective")) +
geom_point(aes(y = perc_obj, color = "Objective")) +
geom_line(aes(y = perc_self, group = 1, color = "Self-report")) +
geom_point(aes(y = perc_self, color = "Self-report")) +
labs(x = "Group (self-report)", y = "Percentile (%)", color = "") +
theme(legend.position = "bottom")
# Quartiles based on second column (obj)
q_obj <- quantile(data[,2], probs = c(0.25, 0.5, 0.75))
groups_obj <- cut(data[,2], breaks = c(-Inf, q_obj[1], q_obj[2], q_obj[3], Inf), labels = FALSE)
split_obj <- split(as.data.frame(data), groups_obj)
df_obj <- data.frame(
group = factor(names(split_obj), levels = 1:4),
perc_self = 100 * sapply(split_obj, function(x) ecdf(data[,"self"])(mean(x[,"self"]))),
perc_obj = 100 * sapply(split_obj, function(x) ecdf(data[,"obj"])(mean(x[,"obj"])))
)
p_obj <- ggplot(df_obj, aes(x = group)) +
geom_line(aes(y = perc_obj, group = 1, color = "Objective")) +
geom_point(aes(y = perc_obj, color = "Objective")) +
geom_line(aes(y = perc_self, group = 1, color = "Self-report")) +
geom_point(aes(y = perc_self, color = "Self-report")) +
labs(x = "Group (objective)", y = "Percentile (%)", color = "") +
theme(legend.position = "bottom")
grid.arrange(p_self, p_obj, ncol = 2)
split_obj
library(MASS)
library(ggplot2)
library(gridExtra)
n <- 1000
mu <- c(0, 0)
rho <- 0.19
sigma <- matrix(c(1, rho, rho, 1), nrow = 2)
set.seed(565)
data <- mvrnorm(n = n, mu = mu, Sigma = sigma)
#n <- 1000
#data = matrix(0.0, nrow=n, ncol=2)
#data[,1] = rnorm(n)
#data[,2] = data[,1] + 4*rnorm(n)
#colnames(data) <- c("self","obj")
#cor(data[,1],data[,2])
colnames(data) <- c("self","obj")
# Quartiles based on first column (self)
q_self <- quantile(data[,1], probs = c(0.25, 0.5, 0.75))
groups_self <- cut(data[,1], breaks = c(-Inf, q_self[1], q_self[2], q_self[3], Inf), labels = FALSE)
split_self <- split(as.data.frame(data), groups_self)
df_self <- data.frame(
group = factor(names(split_self), levels = 1:4),
perc_self = 100 * sapply(split_self, function(x) ecdf(data[,"self"])(mean(x[,"self"]))),
perc_obj = 100 * sapply(split_self, function(x) ecdf(data[,"obj"])(mean(x[,"obj"])))
)
p_self <- ggplot(df_self, aes(x = group)) +
geom_line(aes(y = perc_obj, group = 1, color = "Objective")) +
geom_point(aes(y = perc_obj, color = "Objective")) +
geom_line(aes(y = perc_self, group = 1, color = "Self-report")) +
geom_point(aes(y = perc_self, color = "Self-report")) +
labs(x = "Group (self-report)", y = "Percentile (%)", color = "") +
theme(legend.position = "bottom")
# Quartiles based on second column (obj)
q_obj <- quantile(data[,2], probs = c(0.25, 0.5, 0.75))
groups_obj <- cut(data[,2], breaks = c(-Inf, q_obj[1], q_obj[2], q_obj[3], Inf), labels = FALSE)
split_obj <- split(as.data.frame(data), groups_obj)
df_obj <- data.frame(
group = factor(names(split_obj), levels = 1:4),
perc_self = 100 * sapply(split_obj, function(x) ecdf(data[,"self"])(mean(x[,"self"]))),
perc_obj = 100 * sapply(split_obj, function(x) ecdf(data[,"obj"])(mean(x[,"obj"])))
)
p_obj <- ggplot(df_obj, aes(x = group)) +
geom_line(aes(y = perc_obj, group = 1, color = "Objective")) +
geom_point(aes(y = perc_obj, color = "Objective")) +
geom_line(aes(y = perc_self, group = 1, color = "Self-report")) +
geom_point(aes(y = perc_self, color = "Self-report")) +
labs(x = "Group (objective)", y = "Percentile (%)", color = "") +
theme(legend.position = "bottom")
grid.arrange(p_obj, p_self, ncol = 2)
library(MASS)
library(ggplot2)
library(gridExtra)
n <- 1000
mu <- c(0, 0)
rho <- 0.19
sigma <- matrix(c(1, rho, rho, 1), nrow = 2)
set.seed(565)
data <- mvrnorm(n = n, mu = mu, Sigma = sigma)
#n <- 1000
#data = matrix(0.0, nrow=n, ncol=2)
#data[,1] = rnorm(n)
#data[,2] = data[,1] + 4*rnorm(n)
#colnames(data) <- c("self","obj")
#cor(data[,1],data[,2])
colnames(data) <- c("self","obj")
# Quartiles based on second column (obj)
q_obj <- quantile(data[,2], probs = c(0.25, 0.5, 0.75))
groups_obj <- cut(data[,2], breaks = c(-Inf, q_obj[1], q_obj[2], q_obj[3], Inf), labels = FALSE)
split_obj <- split(as.data.frame(data), groups_obj)
df_obj <- data.frame(
group = factor(names(split_obj), levels = 1:4),
perc_self = 100 * sapply(split_obj, function(x) ecdf(data[,"obj"])(mean(x[,"self"]))),
perc_obj = 100 * sapply(split_obj, function(x) ecdf(data[,"obj"])(mean(x[,"obj"])))
)
p_obj <- ggplot(df_obj, aes(x = group)) +
geom_line(aes(y = perc_obj, group = 1, color = "Objective")) +
geom_point(aes(y = perc_obj, color = "Objective")) +
geom_line(aes(y = perc_self, group = 1, color = "Self-report")) +
geom_point(aes(y = perc_self, color = "Self-report")) +
labs(x = "Group (objective)", y = "Percentile (%)", color = "") +
theme(legend.position = "bottom")
# Quartiles based on first column (self)
q_self <- quantile(data[,1], probs = c(0.25, 0.5, 0.75))
groups_self <- cut(data[,1], breaks = c(-Inf, q_self[1], q_self[2], q_self[3], Inf), labels = FALSE)
split_self <- split(as.data.frame(data), groups_self)
df_self <- data.frame(
group = factor(names(split_self), levels = 1:4),
perc_self = 100 * sapply(split_self, function(x) ecdf(data[,"self"])(mean(x[,"self"]))),
perc_obj = 100 * sapply(split_self, function(x) ecdf(data[,"obj"])(mean(x[,"obj"])))
)
p_self <- ggplot(df_self, aes(x = group)) +
geom_line(aes(y = perc_obj, group = 1, color = "Objective")) +
geom_point(aes(y = perc_obj, color = "Objective")) +
geom_line(aes(y = perc_self, group = 1, color = "Self-report")) +
geom_point(aes(y = perc_self, color = "Self-report")) +
labs(x = "Group (self-report)", y = "Percentile (%)", color = "") +
theme(legend.position = "bottom")
grid.arrange(p_obj, p_self, ncol = 2)
library(MASS)
library(ggplot2)
library(gridExtra)
n <- 1000
mu <- c(0, 0)
rho <- 0.19
sigma <- matrix(c(1, rho, rho, 1), nrow = 2)
set.seed(565)
data <- mvrnorm(n = n, mu = mu, Sigma = sigma)
#n <- 1000
#data = matrix(0.0, nrow=n, ncol=2)
#data[,1] = rnorm(n)
#data[,2] = data[,1] + 4*rnorm(n)
#colnames(data) <- c("self","obj")
#cor(data[,1],data[,2])
colnames(data) <- c("self","obj")
# Quartiles based on second column (obj)
q_obj <- quantile(data[,2], probs = c(0.25, 0.5, 0.75))
groups_obj <- cut(data[,2], breaks = c(-Inf, q_obj[1], q_obj[2], q_obj[3], Inf), labels = FALSE)
split_obj <- split(as.data.frame(data), groups_obj)
df_obj <- data.frame(
group = factor(names(split_obj), levels = 1:4),
perc_self = 100 * sapply(split_obj, function(x) ecdf(data[,"obj"])(mean(x[,"self"]))),
perc_obj = 100 * sapply(split_obj, function(x) ecdf(data[,"obj"])(mean(x[,"obj"])))
)
p_obj <- ggplot(df_obj, aes(x = group)) +
geom_line(aes(y = perc_obj, group = 1, color = "Objective")) +
geom_point(aes(y = perc_obj, color = "Objective")) +
geom_line(aes(y = perc_self, group = 1, color = "Self-report")) +
geom_point(aes(y = perc_self, color = "Self-report")) +
labs(x = "Group (objective)", y = "Percentile (%)", color = "") +
theme(legend.position = "bottom")
# Quartiles based on first column (self)
q_self <- quantile(data[,1], probs = c(0.25, 0.5, 0.75))
groups_self <- cut(data[,1], breaks = c(-Inf, q_self[1], q_self[2], q_self[3], Inf), labels = FALSE)
split_self <- split(as.data.frame(data), groups_self)
df_self <- data.frame(
group = factor(names(split_self), levels = 1:4),
perc_self = 100 * sapply(split_self, function(x) ecdf(data[,"self"])(mean(x[,"self"]))),
perc_obj = 100 * sapply(split_self, function(x) ecdf(data[,"self"])(mean(x[,"obj"])))
)
p_self <- ggplot(df_self, aes(x = group)) +
geom_line(aes(y = perc_obj, group = 1, color = "Objective")) +
geom_point(aes(y = perc_obj, color = "Objective")) +
geom_line(aes(y = perc_self, group = 1, color = "Self-report")) +
geom_point(aes(y = perc_self, color = "Self-report")) +
labs(x = "Group (self-report)", y = "Percentile (%)", color = "") +
theme(legend.position = "bottom")
grid.arrange(p_obj, p_self, ncol = 2)
library(MASS)
library(ggplot2)
library(gridExtra)
n <- 1000
mu <- c(0, 0)
rho <- 0.19
sigma <- matrix(c(1, rho, rho, 1), nrow = 2)
set.seed(565)
data <- mvrnorm(n = n, mu = mu, Sigma = sigma)
#n <- 1000
#data = matrix(0.0, nrow=n, ncol=2)
#data[,1] = rnorm(n)
#data[,2] = data[,1] + 4*rnorm(n)
#colnames(data) <- c("self","obj")
#cor(data[,1],data[,2])
colnames(data) <- c("self","obj")
data[,1] <- data[,1] +1
# Quartiles based on second column (obj)
q_obj <- quantile(data[,2], probs = c(0.25, 0.5, 0.75))
groups_obj <- cut(data[,2], breaks = c(-Inf, q_obj[1], q_obj[2], q_obj[3], Inf), labels = FALSE)
split_obj <- split(as.data.frame(data), groups_obj)
df_obj <- data.frame(
group = factor(names(split_obj), levels = 1:4),
perc_self = 100 * sapply(split_obj, function(x) ecdf(data[,"obj"])(mean(x[,"self"]))),
perc_obj = 100 * sapply(split_obj, function(x) ecdf(data[,"obj"])(mean(x[,"obj"])))
)
p_obj <- ggplot(df_obj, aes(x = group)) +
geom_line(aes(y = perc_obj, group = 1, color = "Objective")) +
geom_point(aes(y = perc_obj, color = "Objective")) +
geom_line(aes(y = perc_self, group = 1, color = "Self-report")) +
geom_point(aes(y = perc_self, color = "Self-report")) +
labs(x = "Group (objective)", y = "Percentile (%)", color = "") +
theme(legend.position = "bottom")
# Quartiles based on first column (self)
q_self <- quantile(data[,1], probs = c(0.25, 0.5, 0.75))
groups_self <- cut(data[,1], breaks = c(-Inf, q_self[1], q_self[2], q_self[3], Inf), labels = FALSE)
split_self <- split(as.data.frame(data), groups_self)
df_self <- data.frame(
group = factor(names(split_self), levels = 1:4),
perc_self = 100 * sapply(split_self, function(x) ecdf(data[,"self"])(mean(x[,"self"]))),
perc_obj = 100 * sapply(split_self, function(x) ecdf(data[,"self"])(mean(x[,"obj"])))
)
p_self <- ggplot(df_self, aes(x = group)) +
geom_line(aes(y = perc_obj, group = 1, color = "Objective")) +
geom_point(aes(y = perc_obj, color = "Objective")) +
geom_line(aes(y = perc_self, group = 1, color = "Self-report")) +
geom_point(aes(y = perc_self, color = "Self-report")) +
labs(x = "Group (self-report)", y = "Percentile (%)", color = "") +
theme(legend.position = "bottom")
grid.arrange(p_obj, p_self, ncol = 2)
library(MASS)
library(ggplot2)
library(gridExtra)
n <- 1000
mu <- c(0, 0)
rho <- 0.19
sigma <- matrix(c(1, rho, rho, 1), nrow = 2)
set.seed(565)
data <- mvrnorm(n = n, mu = mu, Sigma = sigma)
#n <- 1000
#data = matrix(0.0, nrow=n, ncol=2)
#data[,1] = rnorm(n)
#data[,2] = data[,1] + 4*rnorm(n)
#colnames(data) <- c("self","obj")
#cor(data[,1],data[,2])
colnames(data) <- c("self","obj")
data[,1] <- data[,1] + 0.5
# Quartiles based on second column (obj)
q_obj <- quantile(data[,2], probs = c(0.25, 0.5, 0.75))
groups_obj <- cut(data[,2], breaks = c(-Inf, q_obj[1], q_obj[2], q_obj[3], Inf), labels = FALSE)
split_obj <- split(as.data.frame(data), groups_obj)
df_obj <- data.frame(
group = factor(names(split_obj), levels = 1:4),
perc_self = 100 * sapply(split_obj, function(x) ecdf(data[,"obj"])(mean(x[,"self"]))),
perc_obj = 100 * sapply(split_obj, function(x) ecdf(data[,"obj"])(mean(x[,"obj"])))
)
p_obj <- ggplot(df_obj, aes(x = group)) +
geom_line(aes(y = perc_obj, group = 1, color = "Objective")) +
geom_point(aes(y = perc_obj, color = "Objective")) +
geom_line(aes(y = perc_self, group = 1, color = "Self-report")) +
geom_point(aes(y = perc_self, color = "Self-report")) +
labs(x = "Group (objective)", y = "Percentile (%)", color = "") +
theme(legend.position = "bottom")
# Quartiles based on first column (self)
q_self <- quantile(data[,1], probs = c(0.25, 0.5, 0.75))
groups_self <- cut(data[,1], breaks = c(-Inf, q_self[1], q_self[2], q_self[3], Inf), labels = FALSE)
split_self <- split(as.data.frame(data), groups_self)
df_self <- data.frame(
group = factor(names(split_self), levels = 1:4),
perc_self = 100 * sapply(split_self, function(x) ecdf(data[,"self"])(mean(x[,"self"]))),
perc_obj = 100 * sapply(split_self, function(x) ecdf(data[,"self"])(mean(x[,"obj"])))
)
p_self <- ggplot(df_self, aes(x = group)) +
geom_line(aes(y = perc_obj, group = 1, color = "Objective")) +
geom_point(aes(y = perc_obj, color = "Objective")) +
geom_line(aes(y = perc_self, group = 1, color = "Self-report")) +
geom_point(aes(y = perc_self, color = "Self-report")) +
labs(x = "Group (self-report)", y = "Percentile (%)", color = "") +
theme(legend.position = "bottom")
grid.arrange(p_obj, p_self, ncol = 2)
library(MASS)
library(ggplot2)
library(gridExtra)
n <- 1000
mu <- c(0, 0)
rho <- 0.19
sigma <- matrix(c(1, rho, rho, 1), nrow = 2)
set.seed(565)
data <- mvrnorm(n = n, mu = mu, Sigma = sigma)
#n <- 1000
#data = matrix(0.0, nrow=n, ncol=2)
#data[,1] = rnorm(n)
#data[,2] = data[,1] + 4*rnorm(n)
#colnames(data) <- c("self","obj")
#cor(data[,1],data[,2])
colnames(data) <- c("self","obj")
#add a shift(?)
shift <- 0
data[,1] <- data[,1] + shift
# Quartiles based on second column (obj)
q_obj <- quantile(data[,2], probs = c(0.25, 0.5, 0.75))
groups_obj <- cut(data[,2], breaks = c(-Inf, q_obj[1], q_obj[2], q_obj[3], Inf), labels = FALSE)
split_obj <- split(as.data.frame(data), groups_obj)
df_obj <- data.frame(
group = factor(names(split_obj), levels = 1:4),
perc_self = 100 * sapply(split_obj, function(x) ecdf(data[,"obj"])(mean(x[,"self"]))),
perc_obj = 100 * sapply(split_obj, function(x) ecdf(data[,"obj"])(mean(x[,"obj"])))
)
p_obj <- ggplot(df_obj, aes(x = group)) +
geom_line(aes(y = perc_obj, group = 1, color = "Objective")) +
geom_point(aes(y = perc_obj, color = "Objective")) +
geom_line(aes(y = perc_self, group = 1, color = "Self-report")) +
geom_point(aes(y = perc_self, color = "Self-report")) +
labs(x = "Group (objective)", y = "Percentile (%)", color = "") +
theme(legend.position = "bottom")
# Quartiles based on first column (self)
q_self <- quantile(data[,1], probs = c(0.25, 0.5, 0.75))
groups_self <- cut(data[,1], breaks = c(-Inf, q_self[1], q_self[2], q_self[3], Inf), labels = FALSE)
split_self <- split(as.data.frame(data), groups_self)
df_self <- data.frame(
group = factor(names(split_self), levels = 1:4),
perc_self = 100 * sapply(split_self, function(x) ecdf(data[,"self"])(mean(x[,"self"]))),
perc_obj = 100 * sapply(split_self, function(x) ecdf(data[,"self"])(mean(x[,"obj"])))
)
p_self <- ggplot(df_self, aes(x = group)) +
geom_line(aes(y = perc_obj, group = 1, color = "Objective")) +
geom_point(aes(y = perc_obj, color = "Objective")) +
geom_line(aes(y = perc_self, group = 1, color = "Self-report")) +
geom_point(aes(y = perc_self, color = "Self-report")) +
labs(x = "Group (self-report)", y = "Percentile (%)", color = "") +
theme(legend.position = "bottom")
grid.arrange(p_obj, p_self, ncol = 2)
#load library with all datasets used in Faraway's book
library(faraway)
data(pima, package="faraway")
#look at the header
head(pima)
#and summary statistics
summary(pima)
#sort the data on diastolic pressure
sort(pima$diastolic)
#therefore, we replace these zeros with NA (not available) values
pima$diastolic[pima$diastolic == 0]  <- NA
pima$glucose[pima$glucose == 0] <- NA
pima$triceps[pima$triceps == 0]  <- NA
pima$insulin[pima$insulin == 0] <- NA
pima$bmi[pima$bmi == 0] <- NA
#the following values are cathegorical, not numerical
pima$test <- factor(pima$test)
#we may be interested in summary statistics
summary(pima$test)
#we make use of descriptive labels
levels(pima$test) <- c("negative","positive")
summary(pima)
#there are different ways of visualising the distribution of data
#histogram is one of those. the number and width of the bins is set automatically, but can be easily modified
hist(pima$diastolic,xlab="Diastolic",main="")
#another way is to use a smoothed density. the amount of smoothing is set automatically, but can be amended
plot(density(pima$diastolic,na.rm=TRUE),main="")
#we may also as well plot the sorted data, here we see individual points (!)
plot(sort(pima$diastolic),ylab="Sorted Diastolic")
#we may ask if there's any relationship between diastolic pressure and diabetes
plot(diabetes ~ diastolic,pima)
#if the second variable is cathegorical, it produces box plot
plot(diabetes ~ test,pima)
#throughout this course, we will make use of advanced graphic library ggplot2
require(ggplot2)
ggplot(pima,aes(x=diastolic))+geom_histogram()
ggplot(pima,aes(x=diastolic))+geom_density()
ggplot(pima,aes(x=diastolic,y=diabetes))+geom_point()
ggplot(pima,aes(x=diastolic,y=diabetes,shape=test))+geom_point()+theme(legend.position = "top", legend.direction = "horizontal")
ggplot(pima,aes(x=diastolic,y=diabetes)) + geom_point(size=1) + facet_grid(~ test)
#position of manilius crater on the moon (1750 Tobias Mayer)
data(manilius, package="faraway")
head(manilius)
#how did Mayer solve this problem?
#data was divided into three groups so that the observations were "similar in some respect"
(moon3 <- aggregate(manilius[,1:3],list(manilius$group), sum))
#we sum equations in these 3 groups and solve a system of 3 equations and 3 unknowns
solve(cbind(9,moon3$sinang,moon3$cosang), moon3$arc)
#this is not very far from the result of linear regression coefficients
#(we still don't actually kno, what they are)
lmod <- lm(arc ~ sinang + cosang, manilius)
coef(lmod)
summary(lmod)
#how did Mayer choose the groups?
ggplot(manilius,aes(x=sinang,y=cosang)) + geom_point(size=1) + facet_grid(~ group)
ggplot(manilius,aes(x=sinang,y=cosang)) + geom_point(size=1)
#linear regression mechanically (will be explained next week)
X <- cbind(1,manilius[,2],manilius[,3])
Y <- manilius[,1]
solve(t(X)%*%X) %*% t(X) %*% Y
data(GaltonFamilies, package="HistData")
plot(childHeight ~ midparentHeight, GaltonFamilies)
lmod <- lm(childHeight ~ midparentHeight, GaltonFamilies)
coef(lmod)
abline(lmod)
(beta <- with(GaltonFamilies, cor(midparentHeight, childHeight) * sd(childHeight) / sd(midparentHeight)))
(alpha <- with(GaltonFamilies, mean(childHeight) - beta * mean(midparentHeight)))
(beta1 <- with(GaltonFamilies, sd(childHeight) / sd(midparentHeight)))
(alpha1 <- with(GaltonFamilies, mean(childHeight) - beta1 * mean(midparentHeight)))
abline(alpha1, beta1, lty=2)
